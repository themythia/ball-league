{"version":3,"sources":["components/Sidebar.js","hooks/useTeam.js","components/Teams.js"],"names":["CustomLink","to","children","match","useRouteMatch","pathname","style","fontWeight","Sidebar","title","list","url","location","useLocation","className","map","item","index","key","slug","search","toUpperCase","useTeam","team","useFetch","JSON","stringify","Team","teamId","useParams","loading","response","width","id","name","established","manager","coach","Teams","useTeamNames","teamNames","path"],"mappings":"iHAAA,mDAIMA,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAClBC,EAAQC,YAAcH,EAAGI,UAC/B,OACE,wBAAIC,MAAO,CAAEC,WAAYJ,EAAQ,IAAM,WACrC,kBAAC,IAAD,CAAMF,GAAIA,GAAKC,KA2BNM,IAtBC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAChBC,EAAQP,cAARO,IACFC,EAAWC,cACjB,OACE,6BACE,wBAAIC,UAAU,UAAUL,GACxB,wBAAIK,UAAU,gBACXJ,EAAKK,KAAI,SAACC,EAAMC,GAAP,OACR,kBAACjB,EAAD,CACEkB,IAAKD,EACLhB,GAAI,CACFI,SAAS,GAAD,OAAKM,EAAL,YAAYQ,IAAKH,IACzBI,OAAQR,EAASQ,SAGlBJ,EAAKK,sB,gCC5BlB,YAKeC,IAHC,SAACC,GACf,OAAOC,YAAS,QAAS,OAAQC,KAAKC,UAAU,CAAEH,Y,gCCHpD,iFAcMI,EAAO,WACX,IAAQC,EAAWC,cAAXD,OACR,EAAoCN,YAAQM,GAApCE,EAAR,EAAQA,QAAmBP,EAA3B,EAAiBQ,SAEjB,OAAID,EACK,kBAAC,IAAD,MAIP,yBAAKhB,UAAU,SACb,yBAAKR,MAAO,CAAE0B,MAAO,SACnB,kBAAC,IAAD,CAAUC,GAAIV,EAAKU,GAAInB,UAAU,WACjC,wBAAIA,UAAU,iBAAiBS,EAAKW,MACpC,wBAAIpB,UAAU,iBACZ,mCACM,6BAAMS,EAAKY,cAEjB,sCACS,6BAAMZ,EAAKa,UAEpB,oCACO,6BAAMb,EAAKc,SAGpB,kBAAC,IAAD,CAAMvB,UAAU,kBAAkBb,GAAE,WAAM2B,IACvCL,EAAKW,KADR,iBA8BOI,UAtBD,WACZ,MAAyCC,cAAvBC,EAAlB,EAAQT,SAAqBD,EAA7B,EAA6BA,QACrBnB,EAAQP,cAARO,IAER,OAAImB,EACK,kBAAC,IAAD,MAIP,yBAAKhB,UAAU,wBACb,kBAAC,IAAD,CAASL,MAAM,QAAQC,KAAM8B,IAC7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAI,UAAK9B,EAAL,aACT,kBAACgB,EAAD,OAEF,kBAAC,IAAD,CAAOc,KAAK,KACV,yBAAK3B,UAAU,uBAAf","file":"static/js/8.e2211f72.chunk.js","sourcesContent":["import React from 'react';\r\nimport slug from 'slug';\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom';\r\n\r\nconst CustomLink = ({ to, children }) => {\r\n  const match = useRouteMatch(to.pathname);\r\n  return (\r\n    <li style={{ fontWeight: match ? 900 : 'normal' }}>\r\n      <Link to={to}>{children}</Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Sidebar = ({ title, list }) => {\r\n  const { url } = useRouteMatch();\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h3 className='header'>{title}</h3>\r\n      <ul className='sidebar-list'>\r\n        {list.map((item, index) => (\r\n          <CustomLink\r\n            key={index}\r\n            to={{\r\n              pathname: `${url}/${slug(item)}`,\r\n              search: location.search,\r\n            }}\r\n          >\r\n            {item.toUpperCase()}\r\n          </CustomLink>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import useFetch from './useFetch';\r\n\r\nconst useTeam = (team) => {\r\n  return useFetch('/team', 'POST', JSON.stringify({ team }));\r\n};\r\nexport default useTeam;\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport useTeamNames from '../hooks/useTeamNames';\r\nimport {\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useRouteMatch,\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport useTeam from '../hooks/useTeam';\r\nimport TeamLogo from './TeamLogo';\r\nimport Loading from './Loading';\r\n\r\nconst Team = () => {\r\n  const { teamId } = useParams();\r\n  const { loading, response: team } = useTeam(teamId);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className='panel'>\r\n      <div style={{ width: '100%' }}>\r\n        <TeamLogo id={team.id} className='center' />\r\n        <h1 className='medium-header'>{team.name}</h1>\r\n        <ul className='info-list row'>\r\n          <li>\r\n            Est.<div>{team.established}</div>\r\n          </li>\r\n          <li>\r\n            Manager<div>{team.manager}</div>\r\n          </li>\r\n          <li>\r\n            Coach<div>{team.coach}</div>\r\n          </li>\r\n        </ul>\r\n        <Link className='center btn-main' to={`/${teamId}`}>\r\n          {team.name} Team Page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Teams = () => {\r\n  const { response: teamNames, loading } = useTeamNames();\r\n  const { url } = useRouteMatch();\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className='container two-column'>\r\n      <Sidebar title='Teams' list={teamNames} />\r\n      <Switch>\r\n        <Route path={`${url}/:teamId`}>\r\n          <Team />\r\n        </Route>\r\n        <Route path='*'>\r\n          <div className='sidebar-instruction'>Select a team</div>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default Teams;\r\n"],"sourceRoot":""}