{"version":3,"sources":["hooks/useFetch.js","components/Sidebar.js","hooks/usePlayers.js","components/Players.js"],"names":["API","useFetch","path","method","body","React","response","setResponse","loading","setLoading","abortController","AbortController","signal","fetch","headers","Accept","then","res","json","JSON","parse","data","aborted","catch","error","console","warn","abort","CustomLink","to","children","match","useRouteMatch","pathname","style","fontWeight","Sidebar","title","list","url","location","useLocation","className","map","item","index","key","slug","search","toUpperCase","usePlayers","team","stringify","Player","players","playerId","useParams","player","find","name","src","avatar","alt","number","marginRight","teamId","slice","position","ppg","apg","spg","rpg","Players","Loading","TransitionGroup","component","CSSTransition","timeout","classNames"],"mappings":"4IAEMA,EAAM,oDAiCGC,IA/BE,SAACC,EAAMC,GAAuB,IAAfC,EAAc,uDAAP,GACrC,EAAgCC,WAAe,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,YAAe,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KA2BA,OAzBAJ,aAAgB,WACd,IAAMK,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAoB/B,OAlBAC,MAAM,GAAD,OAAIb,GAAJ,OAAUE,GAAV,YAAC,aACJC,UACIC,EAAO,CAAEA,QAAS,IAFnB,IAGHU,QAAS,CACPC,OAAQ,mBACR,eAAgB,uBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,gBAAGZ,EAAH,EAAGA,KAAH,OAAeA,EAAOe,KAAKC,MAAMhB,GAAQ,QAC9CY,MAAK,SAACK,GACAT,EAAOU,UACVf,EAAYc,GACZZ,GAAW,OAGdc,OAAM,SAACC,GAAD,OAAWC,QAAQC,KAAK,SAAUF,MAEpC,kBAAMd,EAAgBiB,WAC5B,CAACzB,EAAMC,EAAQC,IAEX,CAAEE,WAAUE,a,gCCjCrB,mDAIMoB,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAClBC,EAAQC,YAAcH,EAAGI,UAC/B,OACE,wBAAIC,MAAO,CAAEC,WAAYJ,EAAQ,IAAM,WACrC,kBAAC,IAAD,CAAMF,GAAIA,GAAKC,KA2BNM,IAtBC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAChBC,EAAQP,cAARO,IACFC,EAAWC,cACjB,OACE,6BACE,wBAAIC,UAAU,UAAUL,GACxB,wBAAIK,UAAU,gBACXJ,EAAKK,KAAI,SAACC,EAAMC,GAAP,OACR,kBAACjB,EAAD,CACEkB,IAAKD,EACLhB,GAAI,CACFI,SAAS,GAAD,OAAKM,EAAL,YAAYQ,IAAKH,IACzBI,OAAQR,EAASQ,SAGlBJ,EAAKK,sB,iGCvBHC,EAHI,SAACC,GAClB,OAAOlD,YAAS,WAAY,OAAQkB,KAAKiC,UAAU,CAAED,W,yCCajDE,EAAS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACRC,EAAaC,cAAbD,SACFE,EAASH,EAAQI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcZ,IAAKY,KAAUJ,KACzD,OACE,yBAAKb,UAAU,SACb,yBACEA,UAAU,SACVkB,IAAG,UAAKH,EAAOI,QACfC,IAAG,UAAKL,EAAOE,KAAZ,eAEL,wBAAIjB,UAAU,iBAAiBe,EAAOE,MACtC,wBAAIjB,UAAU,UAAd,IAAyBe,EAAOM,QAChC,yBAAKrB,UAAU,OACb,wBAAIA,UAAU,YAAYR,MAAO,CAAE8B,YAAa,KAC9C,mCAEE,6BACE,kBAAC,IAAD,CAAMnC,GAAE,WAAM4B,EAAOQ,SAClBR,EAAOQ,OAAO,GAAGhB,cAAgBQ,EAAOQ,OAAOC,MAAM,MAI5D,uCACU,6BAAMT,EAAOU,WAEvB,kCACK,6BAAMV,EAAOW,OAGpB,wBAAI1B,UAAU,aACZ,kCACK,6BAAMe,EAAOY,MAElB,kCACK,6BAAMZ,EAAOa,MAElB,kCACK,6BAAMb,EAAOc,UAqCbC,UA7BC,WACd,IAAQjC,EAAQP,cAARO,IACFC,EAAWC,cACXU,EAAOX,EAASQ,OAAS5B,gBAAMoB,EAASQ,QAAQiB,OAAS,KAE/D,EAAuCf,EAAWC,GAAhCG,EAAlB,EAAQhD,SAER,OAAgB,IAFhB,EAA2BE,QAGlB,kBAACiE,EAAA,EAAD,MAIP,yBAAK/B,UAAU,wBACb,kBAACN,EAAA,EAAD,CAASC,MAAM,UAAUC,KAAMgB,EAAQX,KAAI,SAACc,GAAD,OAAYA,EAAOE,UAC9D,kBAACe,EAAA,EAAD,CAAiBC,UAAW,MAC1B,kBAACC,EAAA,EAAD,CAAeC,QAAS,IAAKC,WAAW,OAAOhC,IAAKN,EAASM,KAC3D,kBAAC,IAAD,CAAQN,SAAUA,GAChB,kBAAC,IAAD,CAAOtC,KAAI,UAAKqC,EAAL,eACT,kBAAC,EAAD,CAAQe,QAASA,KAEnB,kBAAC,IAAD,CAAOpD,KAAK,KACV,yBAAKwC,UAAU,uBAAf","file":"static/js/7.651e51d2.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nconst API = 'https://api.ui.dev/hash-history-basketball-league';\r\n\r\nconst useFetch = (path, method, body = '') => {\r\n  const [response, setResponse] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    fetch(`${API}${path}`, {\r\n      method,\r\n      ...(body ? { body } : {}),\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(({ body }) => (body ? JSON.parse(body) : null))\r\n      .then((data) => {\r\n        if (!signal.aborted) {\r\n          setResponse(data);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => console.warn('Uh-oh.', error));\r\n\r\n    return () => abortController.abort();\r\n  }, [path, method, body]);\r\n\r\n  return { response, loading };\r\n};\r\nexport default useFetch;\r\n","import React from 'react';\r\nimport slug from 'slug';\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom';\r\n\r\nconst CustomLink = ({ to, children }) => {\r\n  const match = useRouteMatch(to.pathname);\r\n  return (\r\n    <li style={{ fontWeight: match ? 900 : 'normal' }}>\r\n      <Link to={to}>{children}</Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Sidebar = ({ title, list }) => {\r\n  const { url } = useRouteMatch();\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <h3 className='header'>{title}</h3>\r\n      <ul className='sidebar-list'>\r\n        {list.map((item, index) => (\r\n          <CustomLink\r\n            key={index}\r\n            to={{\r\n              pathname: `${url}/${slug(item)}`,\r\n              search: location.search,\r\n            }}\r\n          >\r\n            {item.toUpperCase()}\r\n          </CustomLink>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import useFetch from './useFetch';\r\n\r\nconst usePlayers = (team) => {\r\n  return useFetch('/players', 'POST', JSON.stringify({ team }));\r\n};\r\nexport default usePlayers;\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport {\r\n  useLocation,\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  useParams,\r\n  Link,\r\n} from 'react-router-dom';\r\nimport { parse } from 'query-string';\r\nimport usePlayers from '../hooks/usePlayers';\r\nimport slug from 'slug';\r\nimport Loading from './Loading';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst Player = ({ players }) => {\r\n  const { playerId } = useParams();\r\n  const player = players.find(({ name }) => slug(name) === playerId);\r\n  return (\r\n    <div className='panel'>\r\n      <img\r\n        className='avatar'\r\n        src={`${player.avatar}`}\r\n        alt={`${player.name}'s avatar`}\r\n      />\r\n      <h1 className='medium-header'>{player.name}</h1>\r\n      <h3 className='header'>#{player.number}</h3>\r\n      <div className='row'>\r\n        <ul className='info-list' style={{ marginRight: 80 }}>\r\n          <li>\r\n            Team\r\n            <div>\r\n              <Link to={`/${player.teamId}`}>\r\n                {player.teamId[0].toUpperCase() + player.teamId.slice(1)}\r\n              </Link>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            Position<div>{player.position}</div>\r\n          </li>\r\n          <li>\r\n            PPG<div>{player.ppg}</div>\r\n          </li>\r\n        </ul>\r\n        <ul className='info-list'>\r\n          <li>\r\n            APG<div>{player.apg}</div>\r\n          </li>\r\n          <li>\r\n            SPG<div>{player.spg}</div>\r\n          </li>\r\n          <li>\r\n            RPG<div>{player.rpg}</div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Players = () => {\r\n  const { url } = useRouteMatch();\r\n  const location = useLocation();\r\n  const team = location.search ? parse(location.search).teamId : null;\r\n\r\n  const { response: players, loading } = usePlayers(team);\r\n\r\n  if (loading === true) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className='container two-column'>\r\n      <Sidebar title='Players' list={players.map((player) => player.name)} />\r\n      <TransitionGroup component={null}>\r\n        <CSSTransition timeout={500} classNames='fade' key={location.key}>\r\n          <Switch location={location}>\r\n            <Route path={`${url}/:playerId`}>\r\n              <Player players={players} />\r\n            </Route>\r\n            <Route path='*'>\r\n              <div className='sidebar-instruction'>Select a player</div>\r\n            </Route>\r\n          </Switch>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\nexport default Players;\r\n"],"sourceRoot":""}