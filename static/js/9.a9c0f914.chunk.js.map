{"version":3,"sources":["hooks/useTeam.js","hooks/useTeamsArticles.js","components/TeamPage.js"],"names":["useTeam","team","useFetch","JSON","stringify","useTeamsArticles","TeamPage","teamId","useParams","url","useRouteMatch","articles","response","loadingArticles","loading","useTeamNames","teamNames","loadingTeamNames","loadingTeam","useTeamPageData","includes","className","id","name","style","margin","to","pathname","search","championships","map","champs","key","width","established","manager","coach","wins","losses","article","slug","title","Date","date","toLocaleDateString"],"mappings":"iHAAA,YAKeA,IAHC,SAACC,GACf,OAAOC,YAAS,QAAS,OAAQC,KAAKC,UAAU,CAAEH,Y,gCCHpD,YAKeI,IAHU,SAACJ,GACxB,OAAOC,YAAS,YAAa,OAAQC,KAAKC,UAAU,CAAEH,Y,gCCHxD,kGAqFeK,UA7DE,WACf,IAAQC,EAAWC,cAAXD,OACAE,EAAQC,cAARD,IACR,EAjBsB,SAACF,GACvB,MACEF,YAAiBE,GADDI,EAAlB,EAAQC,SAA6BC,EAArC,EAA4BC,QAE5B,EAA2DC,cAAzCC,EAAlB,EAAQJ,SAA8BK,EAAtC,EAA6BH,QAC7B,EAAiDd,YAAQO,GAAvCN,EAAlB,EAAQW,SAAyBM,EAAjC,EAAwBJ,QAExB,MAAO,CACLE,YACAL,WACAV,OACAa,QAASD,GAAmBI,GAAoBC,GAOHC,CAAgBZ,GAAvDS,EAAR,EAAQA,UAAWL,EAAnB,EAAmBA,SAAUV,EAA7B,EAA6BA,KAE7B,OAFA,EAAmCa,QAG1B,kBAAC,IAAD,MAGJE,EAAUI,SAASb,GAKtB,yBAAKc,UAAU,SACb,kBAAC,IAAD,CAAUC,GAAIf,IACd,wBAAIc,UAAU,iBAAiBpB,EAAKsB,MACpC,wBAAIC,MAAO,CAAEC,OAAQ,IACnB,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAU,WAAYC,OAAO,WAAD,OAAarB,KAArD,gBAIF,6CACA,wBAAIc,UAAU,iBACXpB,EAAK4B,cAAcC,KAAI,SAACC,GAAD,OACtB,wBAAIC,IAAKD,GAASA,OAGtB,wBAAIV,UAAU,gBAAgBG,MAAO,CAAES,MAAO,SAC5C,mCACM,6BAAMhC,EAAKiC,cAEjB,sCACS,6BAAMjC,EAAKkC,UAEpB,oCACO,6BAAMlC,EAAKmC,QAElB,qCAEE,6BACGnC,EAAKoC,KADR,MACiBpC,EAAKqC,UAI1B,wBAAIjB,UAAU,UAAd,YACA,wBAAIA,UAAU,YACXV,EAASmB,KAAI,SAACS,GAAD,OACZ,wBAAIP,IAAKO,EAAQjB,IACf,kBAAC,IAAD,CAAMI,GAAE,UAAKjB,EAAL,qBAAqB+B,IAAKD,EAAQE,SACxC,wBAAIpB,UAAU,iBAAiBkB,EAAQE,OACvC,yBAAKpB,UAAU,gBACZ,IAAIqB,KAAKH,EAAQI,MAAMC,6BA1C7B,wBAAIvB,UAAU,eAAd,OAAiCd,EAAjC","file":"static/js/9.a9c0f914.chunk.js","sourcesContent":["import useFetch from './useFetch';\r\n\r\nconst useTeam = (team) => {\r\n  return useFetch('/team', 'POST', JSON.stringify({ team }));\r\n};\r\nexport default useTeam;\r\n","import useFetch from './useFetch';\r\n\r\nconst useTeamsArticles = (team) => {\r\n  return useFetch('/articles', 'POST', JSON.stringify({ team }));\r\n};\r\nexport default useTeamsArticles;\r\n","import React from 'react';\r\nimport { useParams, useRouteMatch } from 'react-router-dom';\r\nimport useTeamNames from '../hooks/useTeamNames';\r\nimport useTeamsArticles from '../hooks/useTeamsArticles';\r\nimport useTeam from '../hooks/useTeam';\r\nimport TeamLogo from './TeamLogo';\r\nimport { Link } from 'react-router-dom';\r\nimport slug from 'slug';\r\nimport Loading from './Loading';\r\n\r\nconst useTeamPageData = (teamId) => {\r\n  const { response: articles, loading: loadingArticles } =\r\n    useTeamsArticles(teamId);\r\n  const { response: teamNames, loading: loadingTeamNames } = useTeamNames();\r\n  const { response: team, loading: loadingTeam } = useTeam(teamId);\r\n\r\n  return {\r\n    teamNames,\r\n    articles,\r\n    team,\r\n    loading: loadingArticles || loadingTeamNames || loadingTeam,\r\n  };\r\n};\r\n\r\nconst TeamPage = () => {\r\n  const { teamId } = useParams();\r\n  const { url } = useRouteMatch();\r\n  const { teamNames, articles, team, loading } = useTeamPageData(teamId);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (!teamNames.includes(teamId)) {\r\n    return <h1 className='text-center'>The {teamId} is not a valid team.</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className='panel'>\r\n      <TeamLogo id={teamId} />\r\n      <h1 className='medium-header'>{team.name}</h1>\r\n      <h4 style={{ margin: 5 }}>\r\n        <Link to={{ pathname: '/players', search: `?teamId=${teamId}` }}>\r\n          View Roster\r\n        </Link>\r\n      </h4>\r\n      <h4>Championships</h4>\r\n      <ul className='championships'>\r\n        {team.championships.map((champs) => (\r\n          <li key={champs}>{champs}</li>\r\n        ))}\r\n      </ul>\r\n      <ul className='info-list row' style={{ width: '100%' }}>\r\n        <li>\r\n          Est.<div>{team.established}</div>\r\n        </li>\r\n        <li>\r\n          Manager<div>{team.manager}</div>\r\n        </li>\r\n        <li>\r\n          Coach<div>{team.coach}</div>\r\n        </li>\r\n        <li>\r\n          Record\r\n          <div>\r\n            {team.wins} - {team.losses}\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <h2 className='header'>Articles</h2>\r\n      <ul className='articles'>\r\n        {articles.map((article) => (\r\n          <li key={article.id}>\r\n            <Link to={`${url}/articles/${slug(article.title)}`}>\r\n              <h4 className='article-title'>{article.title}</h4>\r\n              <div className='article-date'>\r\n                {new Date(article.date).toLocaleDateString()}\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default TeamPage;\r\n"],"sourceRoot":""}